@using Logman.Common.DomainObjects
@model List<Logman.Common.DomainObjects.Alert>
@{
    ViewBag.Title = "ViewAlerts";
    Layout = "~/Views/Shared/_Layout.cshtml";
    long appId = ViewBag.AppId;
    
}

@functions
{

    string getRowIndex(int rowIndex)
    {
        return string.Format("row{0}", rowIndex);
    }

}

<h2>View Alerts</h2>

<p>
    @Html.ActionLink("Add a new alert", "AddAlert", "Application", new { id = appId }, new { @class = "btn btn-default" })
</p>
<table class="table table-responsive table-striped table-bordered" id="tblAlerts">
    
    <thead>

        <tr>
            <td>
                Event Type(s)
            </td>
            <td>
                Duration
            </td>
            <td>
                Threshold 
            </td>
            <td>
                Notification
            </td>
            <td>
                Address
            </td>
            <td>
                Actions
            </td>
        </tr>
    </thead>
    
    <tbody class="">
        
        @{
            
            var rowIndex = 0;
            foreach (var alert in Model)
            {
                rowIndex++;
                <tr id="@getRowIndex(rowIndex)">
                    <td class="element-width-20percent">
                        @{
                            var eventTypes = new List<string>();
                        }
                        @if ((alert.EventLevelValue & (int) EventLevel.Fatal) == (int) EventLevel.Fatal)
                        {
                            eventTypes.Add("<label class='label-danger element-rounded-corner' style='padding-left:5px;padding-right:5px;'>Fatal Errors</label>");
                        }
                        
                        @if ((alert.EventLevelValue & (int)EventLevel.Error) == (int)EventLevel.Error)
                        {
                            eventTypes.Add("<label class='label-error element-rounded-corner' style='padding-left:5px;padding-right:5px;'> Errors</label>");
                        }
                        
                        @if ((alert.EventLevelValue & (int)EventLevel.Warning) == (int)EventLevel.Warning)
                        {
                            eventTypes.Add("<label class='label-warning element-rounded-corner' style='padding-left:5px;padding-right:5px;'>Warnings</label>");
                        }
                        @Html.Raw("<span>"+string.Join(" ", eventTypes)+"</span>")                        
                    </td>
                    <td style="width: 100px;">
                        @alert.PeriodValue @{
                switch (alert.TypeOfPeriod)
                {
                    case PeriodType.Hour:  @Html.Raw("<span> Hour(s) </span>") break;
                    case PeriodType.Day: @Html.Raw("<span> Day(s) </span>") break;
                    case PeriodType.Week: @Html.Raw("<span> Week(s) </span>") break;
                }
                        }
                    </td>

                    <td style="width: 48px;">
                        @alert.Value
                    </td>
                    <td style="width: 48px;">
                        @switch (alert.TypeOfNotification)
                        {
                            case NotificationType.Email:  @Html.Raw("<img src='/Content/Images/appbar.email.png' title='Email' class='glyph'/>") break;
                            case NotificationType.WebHook: @Html.Raw("<img src='/Content/Images/appbar.link.png' title='Web Hook'  class='glyph'/>") break;
                        }
                    </td>
                    <td>
                        @alert.Target
                    </td>
                    <td class="element-width-1 center-align">
                        <a href="javascript:return false;" onclick="javascript:JavaScripts.DeleteAlert(this);" data-appid="@appId" data-row="@rowIndex">
                            <img src="@Url.Content("~/Content/Images/appbar.delete.png")" alt="Delete" title="Delete" class="glyph" />
                        </a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
